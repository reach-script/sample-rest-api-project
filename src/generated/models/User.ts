/* tslint:disable */
/* eslint-disable */
/**
 * User
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserAddress,
    UserAddressFromJSON,
    UserAddressFromJSONTyped,
    UserAddressToJSON,
} from './UserAddress';
import {
    UserCompany,
    UserCompanyFromJSON,
    UserCompanyFromJSONTyped,
    UserCompanyToJSON,
} from './UserCompany';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {number}
     * @memberof User
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    email?: string;
    /**
     * 
     * @type {UserAddress}
     * @memberof User
     */
    address: UserAddress;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    phone: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    website: string;
    /**
     * 
     * @type {UserCompany}
     * @memberof User
     */
    company: UserCompany;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'address': UserAddressFromJSON(json['address']),
        'phone': json['phone'],
        'website': json['website'],
        'company': UserCompanyFromJSON(json['company']),
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'username': value.username,
        'email': value.email,
        'address': UserAddressToJSON(value.address),
        'phone': value.phone,
        'website': value.website,
        'company': UserCompanyToJSON(value.company),
    };
}

